################################################################################
  grafana:
    image: grafana/grafana:{{ grafana_version | default("latest", true) }}
    hostname: grafana
    environment:
      TZ: {{ timezone }}
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_RENDERING_SERVER_URL: http://renderer:8081/render
      GF_RENDERING_CALLBACK_URL: http://grafana:3000/
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: {{ grafana_admin_password }}
      GF_SECURITY_ALLOW_EMBEDDING: "true"
      GF_USERS_ALLOW_SIGN_UP: false
      GF_SERVER_ROOT_URL: http://{{ inventory_hostname }}/grafana
      GF_SERVER_SERVE_FROM_SUB_PATH: "true"
      GF_UNIFIED_ALERTING_SCREENSHOTS_CAPTURE: "true"
      GF_DATABASE_TYPE: mysql
      GF_DATABASE_HOST: {{ mariadb_container_name }}
      GF_DATABASE_NAME: {{ mariadb_dbname }}
      GF_DATABASE_USER: {{ mariadb_user }}
      GF_DATABASE_PASSWORD: {{ mariadb_user_password }}
      GF_DATABASE_SSL_MODE: disable
      GF_INSTALL_PLUGINS: grafana-clock-panel,natel-discrete-panel,grafana-piechart-panel
      GF_SMTP_ENABLED: "true"
      GF_SMTP_HOST: {{ smtp_host }}
      GF_SMTP_USER: {{ smtp_user }}
      GF_SMTP_PASSWORD: {{ smtp_password | trim }}
      GF_SMTP_FROM_ADDRESS: {{ smtp_from }}
    labels:
      traefik.enable: "true"
{% if ssl_enabled | default(false, true) %}
      traefik.http.routers.grafana.entrypoints: websecure
      traefik.http.routers.grafana.tls: "true"
      traefik.http.routers.grafana.tls.certresolver: letsencrypt
{% else %}
      traefik.http.routers.grafana.entrypoints: web
{% endif %}
      traefik.http.routers.grafana.rule: Host(`{{ inventory_hostname }}`) && PathPrefix(`/grafana`)
      traefik.http.services.grafana.loadbalancer.server.port: 3000
    volumes:
      - {{ docker_data_path }}/{{ project_name }}/grafana/conf/provisioning:/etc/grafana/provisioning
      - {{ docker_data_path }}/{{ project_name }}/grafana/data:/var/lib/grafana
      - {{ docker_data_path }}/{{ project_name }}/grafana/logs:/var/log/grafana
    user: "1000"
    depends_on:
      {{ mariadb_container_name }}:
        condition: service_healthy
      grafana-renderer:
        condition: service_started
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:3000/api/health
      interval: 10s
      retries: 30
    cpu_shares: 512
    restart: on-failure:5
    security_opt:
      - no-new-privileges
    pids_limit: 50
    mem_limit: 400m
    networks:
      - {{ docker_frontend_network }}
      - {{ docker_backend_network }}
################################################################################
  grafana-renderer:
    image: grafana/grafana-image-renderer:{{ grafana_renderer_version | default("latest", true) }}
    hostname: renderer
    cpu_shares: 512
    restart: on-failure:5
    security_opt:
      - no-new-privileges
    pids_limit: 50
    mem_limit: 100m
    networks:
      - {{ docker_backend_network }}
