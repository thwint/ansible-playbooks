################################################################################
  portainer:
    image: portainer/{{ portainer_edition | default("portainer-ce", true) }}:{{ portainer_version | default("latest", true) }}
    command: -H unix:///var/run/docker.sock --admin-password '{{ admin_password }}'
    labels:
      traefik.docker.network: frontend
      traefik.enable: true
      # Routers
{% if ssl_enabled | default(false, true) %}
      traefik.http.routers.portainer.entrypoints: websecure
      traefik.http.routers.portainer.tls: "true"
      traefik.http.routers.portainer.tls.certresolver: letsencrypt
{% else %}
      traefik.http.routers.portainer.entrypoints: web
{% endif %}
      traefik.http.routers.portainer.service: portainer
      traefik.http.routers.portainer.middlewares: portainer-strip
{%- if crowdsec_enabled | default(false, true) -%}
      , traefik-bouncer
{% endif %}
      traefik.http.routers.portainer.rule: Host(`{{ inventory_hostname }}`) && PathPrefix(`/portainer`)
      # Services
      traefik.http.services.portainer.loadbalancer.server.port: 9000
      # Middlewares
      traefik.http.middlewares.portainer-strip.stripprefix.prefixes: /portainer
    restart: on-failure:5
    security_opt:
      - no-new-privileges
    read_only: true
    cpu_shares: 512
    pids_limit: 50
    mem_limit: 200m
    networks:
      - {{ docker_frontend_network }}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
